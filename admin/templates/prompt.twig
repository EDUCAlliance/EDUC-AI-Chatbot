{% extends "layout.twig" %}

{% block title %}System Prompt{% endblock %}

{% block heading %}System Prompt{% endblock %}

{% block content %}
    <div class="box">
        <div class="level mb-5">
            <div class="level-left">
                <div class="level-item">
                    <div>
                        <h2 class="subtitle has-text-weight-semibold mb-2">
                            <span class="icon-text">
                                <span class="icon has-text-primary">
                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                                    </svg>
                                </span>
                                <span>Global System Prompt</span>
                            </span>
                        </h2>
                        <p class="has-text-grey">Define your AI bot's personality, behavior, and response guidelines.</p>
                    </div>
                </div>
            </div>
        </div>

        <form action="{{ url_for('prompt') }}" method="post" id="promptForm">
            <div class="field">
                <label class="label">
                    <span class="icon-text">
                        <span class="icon">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                                <polyline points="14,2 14,8 20,8"/>
                                <line x1="16" x2="8" y1="13" y2="13"/>
                                <line x1="16" x2="8" y1="17" y2="17"/>
                                <polyline points="10,9 9,9 8,9"/>
                            </svg>
                        </span>
                        <span>System Instructions</span>
                    </span>
                </label>
                <div class="control">
                    <textarea class="textarea is-medium" name="system_prompt" id="systemPrompt" rows="12" 
                              placeholder="e.g., You are a helpful assistant for the EDUC Alliance. You provide accurate, friendly, and educational responses to users' questions about academic topics, research, and educational resources.">{{ system_prompt }}</textarea>
                </div>
                <div class="level is-mobile mt-2">
                    <div class="level-left">
                        <div class="level-item">
                            <p class="help">
                                <span class="icon-text">
                                    <span class="icon has-text-info">
                                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <circle cx="12" cy="12" r="10"/>
                                            <path d="m9 12 2 2 4-4"/>
                                        </svg>
                                    </span>
                                    <span>This prompt is sent at the beginning of every conversation to establish the AI's behavior.</span>
                                </span>
                            </p>
                        </div>
                    </div>
                    <div class="level-right">
                        <div class="level-item">
                            <span class="tag is-light" id="charCount">0 characters</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="notification is-info is-light">
                <h5 class="title is-6">
                    <span class="icon-text">
                        <span class="icon">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <circle cx="12" cy="12" r="10"/>
                                <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"/>
                                <line x1="12" x2="12.01" y1="17" y2="17"/>
                            </svg>
                        </span>
                        <span>Effective System Prompt Tips</span>
                    </span>
                </h5>
                <div class="content is-small">
                    <ul>
                        <li><strong>Be specific:</strong> Clearly define the bot's role and expertise areas</li>
                        <li><strong>Set tone:</strong> Specify whether responses should be formal, friendly, professional, etc.</li>
                        <li><strong>Include limitations:</strong> Mention what the bot should not do or discuss</li>
                        <li><strong>Context awareness:</strong> Reference the EDUC Alliance or your organization's mission</li>
                        <li><strong>Response format:</strong> Guide how responses should be structured</li>
                    </ul>
                </div>
            </div>

            <div class="field">
                <div class="control">
                    <button class="button is-primary is-medium" type="submit" id="saveBtn">
                        <span class="icon">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"/>
                                <polyline points="17,21 17,13 7,13 7,21"/>
                                <polyline points="7,3 7,8 15,8"/>
                            </svg>
                        </span>
                        <span>Save System Prompt</span>
                    </button>
                    <button class="button is-light is-medium ml-3" type="button" id="previewBtn">
                        <span class="icon">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </span>
                        <span>Preview</span>
                    </button>
                </div>
            </div>
        </form>
    </div>

    <!-- Preview Modal -->
    <div class="modal" id="previewModal">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">
                    <span class="icon-text">
                        <span class="icon">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </span>
                        <span>System Prompt Preview</span>
                    </span>
                </p>
                <button class="delete" aria-label="close" id="closeModal"></button>
            </header>
            <section class="modal-card-body">
                <div class="content" id="previewContent">
                    <!-- Preview content will be inserted here -->
                </div>
            </section>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('promptForm');
            const saveBtn = document.getElementById('saveBtn');
            const textarea = document.getElementById('systemPrompt');
            const charCount = document.getElementById('charCount');
            const previewBtn = document.getElementById('previewBtn');
            const modal = document.getElementById('previewModal');
            const closeModal = document.getElementById('closeModal');
            const previewContent = document.getElementById('previewContent');

            // Character count
            function updateCharCount() {
                const count = textarea.value.length;
                charCount.textContent = `${count} characters`;
                
                if (count > 1000) {
                    charCount.classList.add('has-text-warning');
                } else {
                    charCount.classList.remove('has-text-warning');
                }
            }

            textarea.addEventListener('input', updateCharCount);
            updateCharCount(); // Initial count

            // Form submission
            form.addEventListener('submit', function() {
                saveBtn.classList.add('is-loading');
                saveBtn.disabled = true;
            });

            // Preview functionality
            previewBtn.addEventListener('click', function() {
                const promptText = textarea.value.trim();
                if (!promptText) {
                    previewContent.innerHTML = '<p class="has-text-grey-light">No prompt text to preview.</p>';
                } else {
                    previewContent.innerHTML = `
                        <div class="box has-background-light">
                            <h6 class="title is-6 has-text-grey">System Message:</h6>
                            <p class="is-family-monospace">${promptText.replace(/\n/g, '<br>')}</p>
                        </div>
                        <div class="notification is-info is-light">
                            <p><strong>Note:</strong> This is how your prompt will appear to the AI model at the start of every conversation.</p>
                        </div>
                    `;
                }
                modal.classList.add('is-active');
            });

            // Close modal
            closeModal.addEventListener('click', function() {
                modal.classList.remove('is-active');
            });

            // Close modal when clicking background
            modal.querySelector('.modal-background').addEventListener('click', function() {
                modal.classList.remove('is-active');
            });

            // Show unsaved changes warning
            let originalPrompt = textarea.value;
            textarea.addEventListener('input', function() {
                if (this.value !== originalPrompt) {
                    saveBtn.classList.add('is-warning');
                    saveBtn.innerHTML = '<span class="icon"><svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"/><polyline points="17,21 17,13 7,13 7,21"/><polyline points="7,3 7,8 15,8"/></svg></span><span>Save Changes</span>';
                } else {
                    saveBtn.classList.remove('is-warning');
                    saveBtn.innerHTML = '<span class="icon"><svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"/><polyline points="17,21 17,13 7,13 7,21"/><polyline points="7,3 7,8 15,8"/></svg></span><span>Save System Prompt</span>';
                }
            });
        });
    </script>
{% endblock %} 
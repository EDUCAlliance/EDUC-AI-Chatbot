{% extends "layout.twig" %}

{% block title %}Create New Bot{% endblock %}

{% block heading %}Create New Bot{% endblock %}

{% block content %}
    <div class="box">
        <div class="level mb-5">
            <div class="level-left">
                <div class="level-item">
                    <div>
                        <h2 class="subtitle has-text-weight-semibold mb-2">
                            <span class="icon-text">
                                <span class="icon has-text-primary">
                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <line x1="12" y1="5" x2="12" y2="19"/>
                                        <line x1="5" y1="12" x2="19" y2="12"/>
                                    </svg>
                                </span>
                                <span>New AI Chatbot</span>
                            </span>
                        </h2>
                        <p class="has-text-grey">Create a new AI chatbot with its own personality and knowledge base.</p>
                    </div>
                </div>
            </div>
            <div class="level-right">
                <div class="level-item">
                    <a href="{{ url_for('bots') }}" class="button is-light">
                        <span class="icon">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <polyline points="15,18 9,12 15,6"/>
                            </svg>
                        </span>
                        <span>Back to Bots</span>
                    </a>
                </div>
            </div>
        </div>

        {% if error %}
            <div class="notification is-danger is-light">
                <button class="delete"></button>
                <p><strong>Error:</strong> {{ error }}</p>
            </div>
        {% endif %}

        <form action="{{ url_for('bot-create') }}" method="post" id="createBotForm">
            <div class="columns">
                <div class="column is-half">
                    <div class="field">
                        <label class="label">
                            <span class="icon-text">
                                <span class="icon">
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/>
                                    </svg>
                                </span>
                                <span>Bot Name</span>
                            </span>
                        </label>
                        <div class="control">
                            <input class="input is-medium" type="text" name="bot_name" id="botName" 
                                   placeholder="e.g., EDUC Assistant" required maxlength="100">
                        </div>
                        <p class="help">A descriptive name for your bot that will be displayed in the admin interface.</p>
                    </div>

                    <div class="field">
                        <label class="label">
                            <span class="icon-text">
                                <span class="icon">
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/>
                                    </svg>
                                </span>
                                <span>Mention Name</span>
                            </span>
                        </label>
                        <div class="control has-icons-left">
                            <input class="input is-medium" type="text" name="mention_name" id="mentionName" 
                                   placeholder="educai" required pattern="@?[a-zA-Z0-9_-]+" maxlength="50">
                            <span class="icon is-small is-left">
                                <span class="has-text-grey">@</span>
                            </span>
                        </div>
                        <p class="help">
                            Users will mention this name to interact with the bot (e.g., <code id="mentionExample">@educai</code>).
                            <br><small class="has-text-grey">Only letters, numbers, underscores, and hyphens allowed.</small>
                        </p>
                    </div>
                </div>

                <div class="column is-half">
                    <div class="notification is-info is-light">
                        <h5 class="title is-6">
                            <span class="icon-text">
                                <span class="icon">
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <circle cx="12" cy="12" r="10"/>
                                        <path d="m9 12 2 2 4-4"/>
                                    </svg>
                                </span>
                                <span>What happens next?</span>
                            </span>
                        </h5>
                        <div class="content is-small">
                            <ol>
                                <li><strong>Bot Creation:</strong> Your bot will be created with default settings</li>
                                <li><strong>Configure Settings:</strong> Set up the bot's personality, AI model, and onboarding</li>
                                <li><strong>Upload Documents:</strong> Add knowledge base documents for RAG</li>
                                <li><strong>Test & Deploy:</strong> Your bot will be ready for Nextcloud Talk</li>
                            </ol>
                        </div>
                    </div>

                    <div class="notification is-warning is-light">
                        <h5 class="title is-6">
                            <span class="icon-text">
                                <span class="icon">
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"/>
                                        <line x1="12" x2="12" y1="9" y2="13"/>
                                        <line x1="12" x2="12.01" y1="17" y2="17"/>
                                    </svg>
                                </span>
                                <span>Important Notes</span>
                            </span>
                        </h5>
                        <div class="content is-small">
                            <ul>
                                <li><strong>Unique Mention:</strong> Each bot must have a unique mention name</li>
                                <li><strong>No Spaces:</strong> Mention names cannot contain spaces</li>
                                <li><strong>Case Insensitive:</strong> @EducAI and @educai are treated the same</li>
                                <li><strong>Future Changes:</strong> You can modify all settings later</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div class="field">
                <div class="control">
                    <button class="button is-primary is-medium" type="submit" id="createBtn">
                        <span class="icon">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/>
                            </svg>
                        </span>
                        <span>Create Bot</span>
                    </button>
                    <a href="{{ url_for('bots') }}" class="button is-light is-medium ml-3">
                        <span class="icon">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <line x1="18" y1="6" x2="6" y2="18"/>
                                <line x1="6" y1="6" x2="18" y2="18"/>
                            </svg>
                        </span>
                        <span>Cancel</span>
                    </a>
                </div>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('createBotForm');
            const createBtn = document.getElementById('createBtn');
            const botName = document.getElementById('botName');
            const mentionName = document.getElementById('mentionName');
            const mentionExample = document.getElementById('mentionExample');

            // Update mention example as user types
            mentionName.addEventListener('input', function() {
                let mention = this.value.trim();
                if (mention) {
                    if (!mention.startsWith('@')) {
                        mention = '@' + mention;
                    }
                    mentionExample.textContent = mention;
                } else {
                    mentionExample.textContent = '@educai';
                }
            });

            // Auto-generate mention name from bot name if mention is empty
            botName.addEventListener('input', function() {
                if (!mentionName.value.trim()) {
                    const autoMention = this.value.toLowerCase()
                        .replace(/[^a-z0-9]/g, '')
                        .substring(0, 20);
                    if (autoMention) {
                        mentionName.value = autoMention;
                        mentionName.dispatchEvent(new Event('input'));
                    }
                }
            });

            // Form validation
            form.addEventListener('submit', function() {
                const botNameValue = botName.value.trim();
                const mentionNameValue = mentionName.value.trim();

                if (!botNameValue || !mentionNameValue) {
                    alert('Please fill in both Bot Name and Mention Name.');
                    return false;
                }

                if (!/^@?[a-zA-Z0-9_-]+$/.test(mentionNameValue)) {
                    alert('Mention name can only contain letters, numbers, underscores, and hyphens.');
                    return false;
                }

                createBtn.classList.add('is-loading');
                createBtn.disabled = true;
            });

            // Enable/disable create button based on form validity
            function checkFormValidity() {
                const isValid = botName.value.trim() && mentionName.value.trim() && 
                               /^@?[a-zA-Z0-9_-]+$/.test(mentionName.value.trim());
                createBtn.disabled = !isValid;
            }

            [botName, mentionName].forEach(input => {
                input.addEventListener('input', checkFormValidity);
            });

            // Dismiss error notifications
            document.querySelectorAll('.notification .delete').forEach(button => {
                button.addEventListener('click', function() {
                    this.parentElement.style.display = 'none';
                });
            });

            // Initial form check
            checkFormValidity();
        });
    </script>
{% endblock %} 
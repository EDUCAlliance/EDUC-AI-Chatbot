<style>
.log-message {
    font-family: 'Courier New', monospace;
    white-space: pre-wrap;
    word-break: break-word;
    font-size: 0.875rem;
    line-height: 1.4;
}

.context-panel pre code {
    white-space: pre-wrap;
    word-break: break-word;
    font-size: 0.75rem;
    line-height: 1.3;
}

.search-highlight {
    padding: 0.1em 0.2em;
    border-radius: 2px;
}

/* Additional modern enhancements */
.tooltip-notification {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Smooth transitions for interactive elements */
.button, .input, .textarea, .select select {
    transition: all 0.2s ease;
}

/* Focus styles for better accessibility */
.input:focus, .textarea:focus, .select select:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

/* Loading animations */
@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

.is-loading-pulse {
    animation: pulse 1.5s ease-in-out infinite;
}

/* Mobile responsiveness improvements */
@media (max-width: 768px) {
    .level.is-mobile .level-item {
        margin-bottom: 0.5rem;
    }
    
    .field.has-addons {
        flex-wrap: wrap;
    }
    
    .field.has-addons .control {
        margin-bottom: 0.25rem;
    }
}
</style>

<script>
// Global utilities
window.AdminUtils = {
    // Show success notification
    showSuccess: function(message) {
        this.showNotification(message, 'success');
    },
    
    // Show error notification
    showError: function(message) {
        this.showNotification(message, 'danger');
    },
    
    // Show notification
    showNotification: function(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `notification is-${type} notification-toast`;
        notification.innerHTML = `
            <button class="delete"></button>
            <span>${message}</span>
        `;
        
        notification.style.cssText = `
            position: fixed;
            top: 2rem;
            right: 2rem;
            z-index: 9999;
            max-width: 400px;
            transform: translateX(100%);
            transition: transform 0.3s ease;
        `;
        
        document.body.appendChild(notification);
        
        // Show notification
        requestAnimationFrame(() => {
            notification.style.transform = 'translateX(0)';
        });
        
        // Handle close button
        notification.querySelector('.delete').addEventListener('click', () => {
            this.hideNotification(notification);
        });
        
        // Auto-hide after 5 seconds
        setTimeout(() => {
            this.hideNotification(notification);
        }, 5000);
    },
    
    // Hide notification
    hideNotification: function(notification) {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            if (notification.parentNode) {
                document.body.removeChild(notification);
            }
        }, 300);
    },
    
    // Format date/time
    formatDateTime: function(date) {
        return new Intl.DateTimeFormat('en-US', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        }).format(new Date(date));
    },
    
    // Debounce function
    debounce: function(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }
};

// Initialize global features
document.addEventListener('DOMContentLoaded', function() {
    // Add loading states to forms
    document.querySelectorAll('form').forEach(form => {
        form.addEventListener('submit', function() {
            const submitBtn = form.querySelector('button[type="submit"]');
            if (submitBtn && !submitBtn.classList.contains('is-loading')) {
                submitBtn.classList.add('is-loading');
                submitBtn.disabled = true;
            }
        });
    });
    
    // Enhanced keyboard navigation
    document.addEventListener('keydown', function(e) {
        // Escape key to close modals
        if (e.key === 'Escape') {
            document.querySelectorAll('.modal.is-active').forEach(modal => {
                modal.classList.remove('is-active');
            });
        }
    });
    
    // Enhance file inputs
    document.querySelectorAll('.file-input').forEach(input => {
        input.addEventListener('change', function() {
            const fileName = this.closest('.file').querySelector('.file-name');
            if (fileName && this.files.length > 0) {
                fileName.textContent = this.files[0].name;
            }
        });
    });
});
</script>

</body>
</html> 